heat_template_version: 2015-04-30

description: Full template to deploy a single compute instance

parameters:
  keyname:
    type: string
    description: keypair name to connect to the server
    default: catalyst
  hostname:
    type: string
    description: hostname to associate with IP address
    default: etherpad
  domainname:
    type: string
    description: hostname to associate with IP address
    default: confuse.cloud
  ddns_script_url:
    type: string
    description: URL of a script that will configure update ddns (called as ./ddns-script <hostname> <ip> <password>)
    default: https://raw.githubusercontent.com/flashvoid/demo-provision/main/ddns/namecheap/ddns-update
  ddns_delay:
    type: string
    description: Duration to wait for DDNS to provision before starting to talk to letsencrypt
    default: 3m
  ddns_password:
    type: string
    description: password to use with 
    hidden: true
    default: none

resources:

  demo-network:
    type: OS::Neutron::Net
    
  demo-subnet:
    type: OS::Neutron::Subnet
    properties:
      cidr: "192.168.199.0/24"
      network: { get_resource: demo-network }
      
  demo-router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: { network: public-net }

  demo-interface:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: demo-router } 
      subnet: { get_resource: demo-subnet }
      
  demo-sg:
    type: OS::Neutron::SecurityGroup
    properties:
      rules: [{"direction": "ingress", 
      "port_range_min": 1, 
      "port_range_max": 65535, 
      "protocol": "tcp"}]

  demo-port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: demo-network }
      security_groups: [{get_resource: demo-sg}]

  demo-floating-ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: "public-net"

  dmeo-floating-ip-assoc:
    type: OS::Neutron::FloatingIPAssociation
    depends_on: [ demo-interface ]
    properties:
      floatingip_id: {get_resource: demo-floating-ip}
      port_id: {get_resource: demo-port}

  demo-server:
    type: OS::Nova::Server
    properties:
      flavor: c1.c4r4
      image: ubuntu-18.04-x86_64
      key_name: { get_param: keyname }
      networks:
        - port: { get_resource: demo-port }
      user_data:
        str_replace:
          template: |
              #!/bin/bash -x
              exec &>/var/log/boot-config.log
              apt-get update
              apt-get install -y docker.io
              docker pull etherpad/etherpad
              docker pull nginxproxy/nginx-proxy
              docker pull nginxproxy/acme-companion

              curl $ddns_script_url -o /tmp/ddns-script
              chmod +x /tmp/ddns-script
              sleep 1m
              echo /tmp/ddns-script $hostname $domainname $(ec2metadata --public-ipv4)
              /tmp/ddns-script $hostname $domainname $(ec2metadata --public-ipv4) $ddns_password

              sleep $ddns_delay

              docker run --detach --name nginx-proxy --publish 80:80 --publish 443:443 --volume certs:/etc/nginx/certs --volume vhost:/etc/nginx/vhost.d --volume html:/usr/share/nginx/html --volume /var/run/docker.sock:/tmp/docker.sock:ro nginxproxy/nginx-proxy
              docker run --detach     --name nginx-proxy-acme     --volumes-from nginx-proxy     --volume /var/run/docker.sock:/var/run/docker.sock:ro     --volume acme:/etc/acme.sh     --env "DEFAULT_EMAIL=admin@$domainname"     nginxproxy/acme-companion
              docker run -d --name web --env "VIRTUAL_HOST=$hostname.${domainname}" --env "LETSENCRYPT_HOST=$hostname.${domainname}"  --env "VIRTUAL_PORT=9001" --expose 9001 etherpad/etherpad

          params:
            $hostname: { get_param: hostname }
            $domainname: { get_param: domainname }
            $ddns_script_url: { get_param: ddns_script_url }
            $ddns_password: { get_param: ddns_password }
            $ddns_delay: { get_param: ddns_delay }

outputs:
  public_ip_address:
    description: Public IP address
    value: { get_attr: [ demo-floating-ip, floating_ip_address ] }

